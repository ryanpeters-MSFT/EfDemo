// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntityFrameworkDemos.Migrations
{
    [DbContext(typeof(DemoContext))]
    partial class DemoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Agency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Agencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Millersvile",
                            Name = "Saving Grace Animal Rescue",
                            State = "MD",
                            Zip = "21108"
                        },
                        new
                        {
                            Id = 2,
                            City = "Waldorf",
                            Name = "Last Chance Animal Rescue",
                            State = "MD",
                            Zip = "20603"
                        });
                });

            modelBuilder.Entity("Dog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("AgencyId")
                        .HasColumnType("int");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Received")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId");

                    b.ToTable("Dogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 5,
                            AgencyId = 1,
                            Breed = "Pug",
                            Name = "Pickles",
                            Received = new DateTime(2023, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Age = 2,
                            AgencyId = 2,
                            Breed = "Pitty Mix",
                            Name = "Fluffy",
                            Received = new DateTime(2023, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Age = 8,
                            AgencyId = 1,
                            Breed = "Poodle",
                            Name = "Cheeky",
                            Received = new DateTime(2023, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Age = 4,
                            AgencyId = 2,
                            Breed = "Hound",
                            Name = "Dan",
                            Received = new DateTime(2023, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Age = 7,
                            AgencyId = 2,
                            Breed = "Labrador",
                            Name = "Charlie",
                            Received = new DateTime(2023, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DogShot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Administered")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DogId")
                        .HasColumnType("int");

                    b.Property<int>("ShotId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DogId");

                    b.HasIndex("ShotId");

                    b.ToTable("dogshot", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Administered = new DateTime(2023, 2, 3, 10, 20, 59, 198, DateTimeKind.Local).AddTicks(7863),
                            DogId = 1,
                            ShotId = 1
                        },
                        new
                        {
                            Id = 2,
                            Administered = new DateTime(2023, 2, 3, 10, 20, 59, 198, DateTimeKind.Local).AddTicks(7909),
                            DogId = 1,
                            ShotId = 2
                        },
                        new
                        {
                            Id = 3,
                            Administered = new DateTime(2023, 2, 3, 10, 20, 59, 198, DateTimeKind.Local).AddTicks(7910),
                            DogId = 1,
                            ShotId = 3
                        },
                        new
                        {
                            Id = 4,
                            Administered = new DateTime(2023, 2, 3, 10, 20, 59, 198, DateTimeKind.Local).AddTicks(7912),
                            DogId = 2,
                            ShotId = 2
                        },
                        new
                        {
                            Id = 5,
                            Administered = new DateTime(2023, 2, 3, 10, 20, 59, 198, DateTimeKind.Local).AddTicks(7913),
                            DogId = 3,
                            ShotId = 4
                        });
                });

            modelBuilder.Entity("Shot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Shot");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bordetella"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Canine Distemper"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Canine Hepatitis"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Heartworm"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Kennel Cough"
                        });
                });

            modelBuilder.Entity("Dog", b =>
                {
                    b.HasOne("Agency", "Agency")
                        .WithMany("Dogs")
                        .HasForeignKey("AgencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agency");
                });

            modelBuilder.Entity("DogShot", b =>
                {
                    b.HasOne("Dog", "Dog")
                        .WithMany("DogShots")
                        .HasForeignKey("DogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shot", "Shot")
                        .WithMany("DogShots")
                        .HasForeignKey("ShotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dog");

                    b.Navigation("Shot");
                });

            modelBuilder.Entity("Agency", b =>
                {
                    b.Navigation("Dogs");
                });

            modelBuilder.Entity("Dog", b =>
                {
                    b.Navigation("DogShots");
                });

            modelBuilder.Entity("Shot", b =>
                {
                    b.Navigation("DogShots");
                });
#pragma warning restore 612, 618
        }
    }
}
